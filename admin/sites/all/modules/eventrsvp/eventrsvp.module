<?php
/**
 * Created by PhpStorm.
 * User: debasis
 * Date: 16/6/15
 * Time: 12:04 AM
 */
header('Content-type: text/html');
header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
header("Access-Control-Allow-Credentials: true");
header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
header('Access-Control-Max-Age: 1000');
header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');


function eventrsvp_init() // init function called by defaulted when this module loaded by system
{

    //echo $GLOBALS['theme'];
    //echo 5656;
    //echo user_authenticate('debasis','Pp@ss1234');

//echo "kl";
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');



}

function eventrsvp_menu()
{
    $items = array();

    $items['addeventrsvp'] = array(
        'title' => 'Add eventrsvp',
        'page callback' => 'addeventrsvp',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventrsvplist'] = array(
        'title' => 'eventrsvp List',
        'page callback' => 'eventrsvplist',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['updateeventrsvpstatus'] = array(
        'title' => 'status Change',
        'page callback' => 'updateeventrsvpstatus',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['deleteeventrsvp'] = array(
        'title' => 'eventrsvp Delete',
        'page callback' => 'deleteeventrsvp',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
   $items['eventrsvpdetails'] = array(
        'title' => 'eventrsvp details',
        'page callback' => 'eventrsvpdetails',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventrsvpupdates'] = array(
        'title' => 'eventrsvp Updates',
        'page callback' => 'eventrsvpupdates',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['uploadeventrsvpbanner'] = array(
        'title' => 'eventrsvp Updates',
        'page callback' => 'uploadeventrsvpbanner',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );
    $items['eventrsvplistfrontlisting'] = array(
        'title' => 'eventrsvp',
        'page callback' => 'eventrsvplistfrontlisting',
        'access callback' => TRUE,
        'access arguments' => array('Anonymous Actions.'),
        'expanded' => TRUE,
        //'type'=>MENU_NORMAL_ITEM,
    );


     return $items;
}


function eventrsvpdetails(){
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $eventrsvplist = array();


    $queryu = db_select('eventrsvp', 'ev');

    $queryu->fields('ev', array('id','eventrsvp_name','eventrsvp_description','eventrsvp_image','eventrsvp_status', 'eventrsvp_daterange', 'eventrsvp_timerange','eventrsvp_create_time'));
    $queryu->condition('ev.id', $_POST['id'], '=');
    $resultu = $queryu->execute();


    while($recordu = $resultu->fetchAssoc()) {

        $eventrsvplist['id'] = $recordu['id'];
        $eventrsvplist['eventrsvp_name'] = $recordu['eventrsvp_name'];
        $eventrsvplist['eventrsvp_description'] = $recordu['eventrsvp_description'];
        if($recordu['eventrsvp_image']=='Null' ||  $recordu['eventrsvp_image']==''){
            $eventrsvplist['eventrsvp_image'] =  'images/user2-160x160.jpg';
        }
        else{
            $eventrsvplist['eventrsvp_image'] =  image_style_url('thumbnail',(@$recordu['eventrsvp_image']));

        }
        $eventrsvplist['eventrsvp_status'] = $recordu['eventrsvp_status'];
        $eventrsvplist['eventrsvp_daterange'] = $recordu['eventrsvp_daterange'];
        $eventrsvplist['eventrsvp_timerange'] = $recordu['eventrsvp_timerange'];
        $eventrsvplist['eventrsvp_create_time'] = $recordu['eventrsvp_create_time'];
    }
    echo json_encode(@$eventrsvplist);

}


function eventrsvplist()
{
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $userlist = array();

    $queryu = db_select('eventrsvp', 'ev');

    $queryu->fields('ev', array('id','eventrsvp_name','eventrsvp_description','eventrsvp_image','eventrsvp_status', 'eventrsvp_daterange', 'eventrsvp_timerange','eventrsvp_create_time'));
        // ->condition('u.name', '%' . db_like('john') . '%', 'LIKE')
       // ->condition('ur.rid', 5, '=');
    //->condition('u.uid', 74, '=');
    //->range(0, 20);
    $resultu = $queryu->execute();


    if ($resultu->rowCount() > 0) {
        $i = 0;
        while ($recordu = $resultu->fetchAssoc()) {
           // $picture=$recordu['eventrsvp_image'];
           // if(isset($picture->uri))$picture= image_style_url('thumbnail', $picture->uri);
           // else $picture='';

            $eventrsvplist[$i]['id'] = $recordu['id'];
            $eventrsvplist[$i]['user_id'] = $recordu['user_id'];
            $eventrsvplist[$i]['eventrsvp_name'] = $recordu['eventrsvp_name'];
            $eventrsvplist[$i]['eventrsvp_description'] = $recordu['eventrsvp_description'];
            if($recordu['eventrsvp_image']=='Null' ||  $recordu['eventrsvp_image']==''){
                $eventrsvplist[$i]['eventrsvp_image'] =  'images/user2-160x160.jpg';
            }
            else{
                $eventrsvplist[$i]['eventrsvp_image'] =  image_style_url('thumbnail',(@$recordu['eventrsvp_image']));

            }
            $eventrsvplist[$i]['eventrsvp_status'] = $recordu['eventrsvp_status'];
            $eventrsvplist[$i]['eventrsvp_daterange'] = $recordu['eventrsvp_daterange'];
            $eventrsvplist[$i]['eventrsvp_timerange'] = $recordu['eventrsvp_timerange'];
            $eventrsvplist[$i]['eventrsvp_create_time'] = $recordu['eventrsvp_create_time'];


            $i++;

    }
}
    echo json_encode(@$eventrsvplist);

}
function eventrsvplistfrontlisting()
{
    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $eventrsvplist = array();
    $queryu = db_select('eventrsvp', 'ev');

    $queryu->fields('ev', array('id','eventrsvp_name','eventrsvp_description','eventrsvp_image','eventrsvp_status', 'eventrsvp_daterange', 'eventrsvp_timerange','eventrsvp_create_time'));
    $queryu->condition('ev.eventrsvp_status', 1, '=');
    $queryu->range(0, 5);
    $queryu->orderBy('eventrsvp_daterange','desc');
    // ->condition('ur.rid', 5, '=');
    //->condition('u.uid', 74, '=');
    //->range(0, 20);
    $resultu = $queryu->execute();


    if ($resultu->rowCount() > 0) {
        $i = 0;
        while ($recordu = $resultu->fetchAssoc()) {
            // $picture=$recordu['eventrsvp_image'];
            // if(isset($picture->uri))$picture= image_style_url('thumbnail', $picture->uri);
            // else $picture='';

            $eventrsvplist[$i]['id'] = $recordu['id'];
            $eventrsvplist[$i]['user_id'] = $recordu['user_id'];
            $eventrsvplist[$i]['eventrsvp_name'] = $recordu['eventrsvp_name'];
            $eventrsvplist[$i]['eventrsvp_description'] = $recordu['eventrsvp_description'];
            if($recordu['eventrsvp_image']=='Null' ||  $recordu['eventrsvp_image']==''){
               // $eventrsvplist[$i]['eventrsvp_image'] =  'images/user2-160x160.jpg';
                $eventrsvplist[$i]['eventrsvp_image'] =  'images/eventrsvp_de.png';
            }
            else{
                $eventrsvplist[$i]['eventrsvp_image'] =  image_style_url('frontend-eventrsvp',(@$recordu['eventrsvp_image']));

            }
            $eventrsvplist[$i]['eventrsvp_status'] = $recordu['eventrsvp_status'];
            $eventrsvplist[$i]['eventrsvp_daterange'] = $recordu['eventrsvp_daterange'];
            $eventrsvplist[$i]['eventrsvp_timerange'] = $recordu['eventrsvp_timerange'];
            $eventrsvplist[$i]['eventrsvp_create_time'] = $recordu['eventrsvp_create_time'];


            $i++;

        }
    }
    echo json_encode(@$eventrsvplist);

}


function addeventrsvp(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $user = user_load_by_mail(trim(@$_POST['email']));

    //print_r($_POST);
    ///exit;

        //$_POST['event_id']=1;
        $eventid=1;
        $query = db_insert('eventrsvp')->fields(array('event_id','fname','lname','email','phone', 'gender'));
        $query->values(array(@@$_POST['event_id'],@$_POST['fname'],@$_POST['lname'],@$_POST['email'],@$_POST['phone'],@$_POST['gender']));
        //}
        $query->execute();


    $data['status'] = 'success';
     echo json_encode($data);
    return;
}
function eventrsvpupdates(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

     $roles = array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        // 5 => 'General Users',
    );
    $roles[5]='eventrsvp';
    $user_fields = user_load(@intval($_POST['uid']));
    $user_fields->roles=$roles;
    user_save($user_fields);


    db_update('eventrsvp')
        //->expression('weight', 'weight + :weight', array(':weight' => 1))
        ->fields(array( 'fname'=>@$_POST['fname'], 'lname'=>@$_POST['lname'], 'bname'=>$_POST['bname'],'address'=>@$_POST['address'],'phone_no'=>@$_POST['phone_no'],'mobile_no'=>@$_POST['mobile_no'],'contact_time'=>@$_POST['contact_time']))
        ->condition('user_id', intval($_POST['uid']))
         ->execute();
}

function updateeventrsvpstatus(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
    $eventrsvp_status=1-intval($_POST['eventrsvp_status']);
    db_update('eventrsvp')
        //->expression('weight', 'weight + :weight', array(':weight' => 1))
        ->fields(array( 'eventrsvp_status'=>@$eventrsvp_status))
        ->condition('id', intval($_POST['id']))
        ->execute();

    echo "true";
}

function deleteeventrsvp(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');

    $num_deleted = db_delete('eventrsvp')
        ->condition('id', @$_POST['id'])
        ->execute();

}

 function uploadeventrsvpbanner(){

    header('Content-type: text/html');
    header('Access-Control-Allow-Origin: '.CUSTOM_URL);  //I have also tried the * wildcard and get the same response
    header("Access-Control-Allow-Credentials: true");
    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
    header('Access-Control-Max-Age: 1000');
    header('Access-Control-Allow-Headers: Content-Type, Content-Range, Content-Disposition, Content-Description');
     set_time_limit(0);

     $target_dir = realpath(dirname(__FILE__))."/uploads/";
     $path_parts = pathinfo($_FILES['Filedata']['name']);
     $filename = rand().'_'.time().'.'.$path_parts['extension'];

     $profile_url = '';

     if (move_uploaded_file($_FILES["Filedata"]["tmp_name"], $target_dir.$filename)) {
         //$account = user_load($_POST['userid']);

         $filepath = ($target_dir.$filename);

         $file = (object) array(
             'uid' => 1,
             'uri' => $filepath,
             'filemime' => file_get_mimetype($filepath),
             'status' => 1,
         );
         if ($file) {
// Move the file, into the Drupal file system
             if ($file = file_move($file, 'public://')) {
                 $file->status = FILE_STATUS_PERMANENT;
                 // $file->file_display = 1;
                 $file = file_save($file);
                 //set the extra values needed to make node_save work
                 $file->display = 1;
                 $file->description = "";
             }

             /* db_update('ideas')
                  //->expression('weight', 'weight + :weight', array(':weight' => 1))
                  ->fields(array( 'logo'=>@$file->uri))
                  ->condition('id', intval($_POST['id']))
                  //->condition('type', 'module')
                  ->execute();*/
         }

         /*$file = file_copy($file, 'public://');
         $edit['picture'] = $file;
         user_save($account, $edit);

         $filepath = $file->uri;
         $profile_url = image_style_url('thumbnail', $filepath);*/
     }

     $data['image_url']= image_style_url('thumbnail',(@$file->uri));
     $data['image_name']= (@$file->uri);
     echo json_encode(@$data) ;

}


